
var ScatterPlot = {};
var dbF = [[11, -7, 0], [11, -1, 6], [10, 2, 9], [9, -6, 9], [8, 2, 1], [11, 5, 4], [15, -7, 3], [7, 4, 7], [11, 1, 1],
[0, -6, 2], [15, -2, 6], [2, 3, 6], [10, 2, 8], [14, -4, 9], [6, -4, 2], [1, -3, 4], [15, 6, 3], [12, -3, 0], [3, 5, 6], 
[6, -6, 0], [14, 1, 9], [13, -2, 2], [14, -5, 8], [2, 7, 1], [11, 5, 2], [9, 0, 8], [3, -4, 8], [6, -2, 8], [12, -2, 7], 
[12, 2, 9], [11, 0, 3], [3, -6, 0], [9, 7, 3], [11, -7, 9], [3, 2, 3], [6, -7, 8], [6, -3, 5], [6, 0, 6], [6, -4, 6], 
[6, -7, 2], [11, -7, 0], [7, -1, 4], [7, -2, 2], [7, -2, 5], [12, -7, 0], [8, 0, 7], [7, -6, 9], [14, 2, 5],
[5, 5, 8], [11, -3, 0], [6, -5, 4], [7, 3, 6], [11, 3, 1], [13, -4, 2], [6, 7, 7], [14, 5, 5], [6, -2, 8], [0, -1, 1], 
[0, 1, 7], [8, -2, 7], [15, -3, 7], [7, -5, 3], [0, -4, 3], [11, 1, 7], [9, 6, 1], [6, 4, 3], [10, -4, 2], [12, -3, 8], 
[14, -6, 8], [6, 5, 6], [15, -5, 2], [11, -3, 1], [12, -6, 4], [0, 1, 1], [14, 6, 2], [0, -4, 7], [6, 3, 0], [6, 2, 4], 
[0, 2, 4], [4, -5, 1], [0, 6, 8], [5, -1, 3], [4, -4, 8], [2, 2, 0], [12, 0, 0], [7, -7, 1], [7, -4, 6], [8, 2, 5], 
[5, 0, 7], [14, 3, 2], [13, 4, 0], [5, 4, 9], [11, -5, 7], [4, 0, 5], [0, 1, 4], [10, 5, 5], [15, -7, 4], [11, 6, 9],
[2, 6, 6], [7, 3, 3], [10, 6, 4], [3, -6, 4], [5, 0, 8], [5, 1, 7], [10, 5, 1], [15, -6, 5], [12, -5, 1], [5, 7, 3], 
[13, 2, 6], [0, -7, 8], [15, -7, 6], [0, 1, 8], [12, -6, 6], [4, -2, 3], [11, 3, 9], [7, -1, 3], [3, 3, 9], [6, 6, 4], 
[3, -2, 2], [4, -4, 1], [15, -5, 7], [3, 5, 9], [0, -5, 3], [4, -5, 7], [12, 4, 8], [11, 4, 0], [15, 7, 9], [15, 3, 4], 
[12, -7, 5], [0, 6, 0], [14, -1, 4], [2, 6, 0], [1, 5, 6], [12, 0, 5], [8, 2, 3], [7, 6, 4], [0, -4, 0], [1, -7, 4], [6, -7, 6], [3, 2, 1], [1, -7, 8], [3, 1, 2], [4, 5, 0], [1, -1, 8], [5, 2, 8], [0, -5, 9], [9, -4, 5], [15, 7, 0],
[1, 1, 3], [2, -2, 3], [8, -6, 9], [9, -1, 5], [4, -5, 8], [1, -5, 5], [1, 0, 9], [14, 4, 8], [3, 1, 7], [11, 7, 5], [0, 3, 4], [4, -1, 0], [1, -2, 1], [2, 5, 4], [4, -4, 4], [9, -5, 2], [4, 7, 9], [12, 0, 6], [3, -4, 5], [11, -4, 1], [10, 0, 5], [14, 4, 5], [15, 3, 1], [14, 5, 4], [3, -1, 8], [15, -1, 9], [1, 0, 6], [5, 6, 3], [7, 7, 4], [3, -3, 6], [11, 1, 5], [7, -2, 0], [2, -6, 2], [2, -1, 1], [4, -6, 1], [8, -2, 8], [12, -4, 9], [4, -3, 9], [10, -1, 8], [11, -1, 8], [0, 6, 6], [8, 0, 6], [9, 6, 2], [15, 2, 5], [0, 2, 7], [8, 4, 6], [2, 3, 7], [1, 0, 3], [3, 1, 8], [3, -1, 6],
[15, -6, 5], [12, -5, 3], [0, 4, 6], [3, -3, 1], [15, -6, 8], [14, 5, 0], [4, 3, 7], [10, -7, 6], [8, -3, 4], [13, -1, 1], [2, -7, 3], [3, -7, 5], [2, 4, 0], [8, 2, 2], [10, 5, 8], [15, 7, 1], [4, 5, 4], [11, -1, 7], [0, 1, 7], [15, -5, 6], [1, 5, 9], [9, 3, 1], [0, 1, 4], [7, 0, 1], [1, -4, 4], [8, 0, 4], [3, -2, 4], [4, 0, 2], [4, 1, 6], [3, -5, 2], [8, -2, 6], [14, -7, 2], [11, 0, 2], [13, -5, 4], [15, 7, 4], [15, 5, 3], [15, -1, 0], [2, -6, 4], [1, -3, 6], [15, 0, 0], [15, -7, 1], [2, 1, 3], [6, -4, 0], [5, 3, 2], [9, -1, 8], [13, 4, 3], [14, 6, 1], [7, -2, 3],
[9, 3, 7], [14, 2, 4], [3, 3, 2], [2, 7, 1], [9, -4, 1], [4, -2, 6], [13, -3, 1], [13, -5, 9], [3, -2, 6], [11, 0, 8],
[1, 4, 3], [10, -5, 5], [5, -7, 2], [12, -4, 6], [9, 1, 3], [13, -4, 0], [4, 0, 8], [10, 0, 4], [1, 5, 9],
[14, -2, 5], [9, 5, 1], [15, -2, 1], [10, -4, 2], [6, -7, 5], [5, 0, 3], [15, 7, 2], [6, 2, 8], [8, -2, 2],
[8, 7, 3], [10, -2, 2], [1, -6, 8], [6, 7, 6], [2, 1, 0], [13, 0, 9], [14, 6, 4], [12, -3, 6], [3, 4, 3],
[6, -7, 2], [2, -6, 9], [1, -5, 7], [15, 1, 3], [4, -3, 5], [1, -1, 1], [2, 0, 8], [2, 1, 5], [12, 5, 6],
[6, -6, 2], [10, -4, 1], [15, 5, 7], [9, 6, 8], [3, 4, 3], [0, 3, 7], [8, -4, 7], [3, 5, 1], [0, 2, 0], [15, -3, 8],
[7, -5, 7], [1, 3, 3], [12, -1, 0], [12, -5, 9], [8, 2, 3], [13, -1, 9], [11, 7, 1], [3, 2, 8], [7, 7, 3], [15, 0, 8],
[14, 0, 0], [3, -5, 6], [9, 5, 2], [9, 5, 9], [11, 2, 2], [1, -3, 5], [0, 6, 9], [2, 1, 5], [5, -6, 9], [4, 1, 9],
[9, 2, 3], [12, -7, 1], [0, -3, 4], [8, 5, 3], [9, 6, 6], [11, 4, 3], [12, 2, 5], [11, -7, 8], [1, 6, 6], [5, -4, 0],
[12, 5, 0], [6, -4, 3], [5, -4, 2], [10, -4, 9], [12, 0, 5], [12, 4, 6], [13, -2, 4], [4, 1, 4], [5, 2, 4], [8, -3, 0],
[1, 6, 1], [11, -4, 8], [15, -1, 2], [5, 7, 1], [13, 1, 3], [5, -3, 2], [4, 5, 6], [12, -4, 9], [7, 2, 0], [15, 0, 6],
[6, -6, 8], [6, -2, 9], [13, -7, 7], [7, 6, 0], [12, 2, 5], [3, 0, 5], [2, -7, 3], [7, 1, 1], [0, 1, 3], [14, -4, 6],
[7, 3, 3], [11, 4, 6], [0, 0, 9], [11, 7, 8], [11, 6, 7], [13, 5, 8], [9, -5, 8], [12, -1, 0], [2, 1, 4], [7, 2, 1],
[15, 4, 2], [6, -2, 5], [14, -2, 1], [3, -6, 8], [15, 5, 8], [14, -3, 2], [9, 5, 1], [3, -5, 9], [6, -5, 4], [15, 6, 7],
[11, -2, 0], [9, -5, 5], [9, 2, 0], [13, 6, 0], [1, 0, 1], [13, 1, 2], [1, 1, 5], [15, -4, 0], [11, 1, 3], [13, 0, 7],
[3, 7, 6], [10, 7, 5], [11, -3, 6], [14, 6, 7], [4, 0, 7], [4, 2, 1], [0, -2, 3], [15, -6, 2], [11, -7, 1], [5, 0, 5],
[0, 2, 9], [9, 3, 5], [1, 3, 7], [6, -4, 7], [3, -6, 2], [5, -4, 8], [11, 7, 9], [12, -7, 4], [11, 5, 0], [10, 0, 8],
[7, -3, 7], [4, -4, 3], [13, -6, 1], [1, -1, 0], [12, -1, 4], [0, -4, 6], [11, -3, 7], [9, 5, 7], [12, 2, 5], [3, -6, 8]];

var data_OutcomesByFscore = dbF;

// ScatterPlot.setData = function () {
//     //array.forEach(function (element, i) {
//        data_OutcomesByFscore = dbF;
//     //});
//     ScatterPlot.run();
// };


// Give the points a 3D feel by adding a radial gradient
ScatterPlot.run = function (){
Highcharts.getOptions().colors = $.map(Highcharts.getOptions().colors, function (color) {
    return {
        radialGradient: {
            cx: 0.4,
            cy: 0.3,
            r: 0.5
        },
        stops: [
            [0, color],
            [1, Highcharts.Color(color).brighten(-0.2).get('rgb')]
        ]
    };
});


// Set up the chart
var chart = new Highcharts.Chart({
    chart: {
        backgroundColor: 'rgba(20,20,65,255)',
        renderTo: 'container',
        margin: 100,
        type: 'scatter',
        options3d: {
            enabled: true,
            alpha: 10,
            beta: 30,
            depth: 250,
            viewDistance: 5,
            fitToPlot: false,
            frame: {
                bottom: { size: 1, color: 'rgba(0,0,0,0.02)' },
                back: { size: 1, color: 'rgba(0,0,0,0.04)' },
                side: { size: 1, color: 'rgba(0,0,0,0.06)' }
            }
        }
    },
    title: {
        text: 'F-Score Results'
    },
    subtitle: {
        text: 'Click and drag the plot area to rotate in space'
    },
    plotOptions: {
        scatter: {
            width: 10,
            height: 10,
            depth: 10
        }
    },
    yAxis: {
        min: -7,
        max: 7,
        title: null
    },
    xAxis: {
        min: 0,
        max: 15,
gridLineWidth: 1

    },
    zAxis: {
        min: 0,
        max: 9,

    },
    legend: {
        enabled: false
    },
    series: [{
        name: 'Reading',
        colorByPoint: true,
        data: data_OutcomesByFscore
    }]
});


// Add mouse events for rotation
$(chart.container).on('mousedown.hc touchstart.hc', function (eStart) {
    eStart = chart.pointer.normalize(eStart);

    var posX = eStart.pageX,
        posY = eStart.pageY,
        alpha = chart.options.chart.options3d.alpha,
        beta = chart.options.chart.options3d.beta,
        newAlpha,
        newBeta,
        sensitivity = 5; // lower is more sensitive

    $(document).on({
        'mousemove.hc touchdrag.hc': function (e) {
            // Run beta
            newBeta = beta + (posX - e.pageX) / sensitivity;
            chart.options.chart.options3d.beta = newBeta;

            // Run alpha
            newAlpha = alpha + (e.pageY - posY) / sensitivity;
            chart.options.chart.options3d.alpha = newAlpha;

            chart.redraw(false);
        },
        'mouseup touchend': function () {
            $(document).off('.hc');
        }
    });
});

};
